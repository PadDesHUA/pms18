---
- name: Provision Control Station with Vagrant
  hosts: infdb-srv-01
  gather_facts: no

  tasks:
    - name: Run Vagrant Up Control Station
      command: vagrant up control
      args:
        chdir: /home/itp22109/pms18/Vagrant/
      tags:
        - vagrant_provision

- name: Install necessary packages at control station
  hosts: control
  remote_user: vagrant
  become: true
  tasks:
    - name: Update apt update_cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'
      tags:
        - update_apt_cache

    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - vagrant
        - virtualbox
        - virtualbox-ext-pack
        - virtualbox-qt
        - ansible
      when: ansible_os_family == 'Debian'
      ignore_errors: yes
      tags:
        - install_packages

- name: Provision VM using Vagrant
  hosts: infdb-srv-01
  gather_facts: true
  tasks:
    - name: Execute Vagrant up
      command: vagrant up
      args:
        chdir: ./Vagrant
      become: false
      tags:
        - vagrant_all

- name: InfluxDB Installation
  hosts: infdb-srv-01
  remote_user: vagrant
  become: true
  tasks:
    - name: Fetch the InfluxData GPG key
      shell: wget -q https://repos.influxdata.com/influxdata-archive_compat.key
      args:
        chdir: /tmp
      register: wget_output

    - name: Verify the GPG key checksum
      shell: echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c /tmp/influxdata-archive_compat.key' | sha256sum -c
      register: sha_output
      ignore_errors: yes  # Ignore the error temporarily as GPG import might fail on first run

    - name: Import the GPG key using gpg
      shell: cat /tmp/influxdata-archive_compat.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
      when: sha_output is success

    - name: Add InfluxData repository to apt sources list
      shell: echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list
      when: sha_output is success

    - name: Update the package cache
      apt:
        update_cache: yes

    - name: Install InfluxDB 2
      apt:
        name: influxdb2
        state: present
      notify: 
        - Start InfluxDB Service
      
    - name: Check service
      shell: sudo ps -ef | grep influx
      register: service_status
      changed_when: false
      tags:
         - influxdb_install

    - name: Set up initial user
      uri:
        url: "http://localhost:8086/api/v2/users"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: '{"name": "vagrant", "password": "vagrant", "org": "pms18", "bucket": "mybucket"}'
        return_content: yes
      register: influxdb_user_response
      when: ansible_os_family == 'Debian'
      tags:
        - influx_initial_user

    - name: Print initial user details
      debug:
        msg: "Initial user created! Username: {{ influxdb_user_response.json.name }}, Token: {{ influxdb_user_response.json.token }}"
      when: influxdb_user_response is defined and influxdb_user_response.status == 200
      


  handlers:
    - name: Start InfluxDB service
      systemd:
        name: influxdb
        state: started   
    # - name: InfluxDB service enable-start
    #   shell: systemctl enable influxdb && systemctl start influxdb
    #   register: service_status
    #   changed_when: false
      

    # - name: Check service
    #   shell: sudo ps -ef | grep influx
    #   failed_when: servic!= 0

      