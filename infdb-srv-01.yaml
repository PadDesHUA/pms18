---
# - name: Install InfluxDB
#   hosts: infdb-srv-01
#   become: yes

#   tasks:
- name: Check if InfluxData archive key is already downloaded
  stat:
    path: /home/vagrant/influxdata-archive_compat.key
  register: key_downloaded

- name: Download InfluxData archive key
  command: wget -q https://repos.influxdata.com/influxdata-archive_compat.key -O /home/vagrant/influxdata-archive_compat.key
  register: key_download_result
  when: not key_downloaded.stat.exists

- name: Check if key verification is already done
  stat:
    path: /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg
  register: key_verified

- name: Verify key using sha256sum
  shell: echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c /home/vagrant/influxdata-archive_compat.key' | sha256sum -c
  register: key_verification_result
  failed_when: key_verification_result.rc != 0
  when: not key_verified.stat.exists and key_download_result.changed

- name: Import key and trust GPG key
  shell: cat /home/vagrant/influxdata-archive_compat.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
  when: key_verification_result.rc == 0 and key_download_result.changed

- name: Check if InfluxData repository is already added
  stat:
    path: /etc/apt/sources.list.d/influxdata.list
  register: repo_added

- name: Add InfluxData repository
  shell: echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list
  when: key_verification_result.rc == 0 and not repo_added.stat.exists

- name: Update apt cache
  become: yes
  apt:
    update_cache: yes
  when: repo_added.changed or key_verification_result.changed

- name: Check if InfluxDB is already installed
  become: yes
  stat:
    path: /usr/bin/influx
  register: influx_installed

- name: Install InfluxDB
  become: yes
  apt:
    name: influxdb
    state: present
  when: key_verification_result.rc == 0 and influx_installed.stat.exists == false

- name: Check if InfluxDB service is already running
  become: yes
  service_facts:
    patterns: influxdb
  register: influxdb_service

- name: Start InfluxDB service
  become: yes
  service:
    name: influxdb
    state: started
  when: influx_installed.stat.exists == true and influxdb_service.services['influxdb'].state != 'running'

- name: Check if InfluxDB release archive is already downloaded
  stat:
    path: /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz
  register: archive_downloaded

- name: Download InfluxDB release archive
  command: wget https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10_linux_amd64.tar.gz -O /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz
  register: download_result
  when: not archive_downloaded.stat.exists

- name: Download InfluxDB release archive using curl
  command: curl -o /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz https://dl.influxdata.com/influxdb/releases/influxdb-1.8.10_linux_amd64.tar.gz
  register: download_result
  ignore_errors: yes
  when: not archive_downloaded.stat.exists

- name: Check if InfluxData public key is already imported for verification
  become: yes
  stat:
    path: /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg
  register: influxdata_key_imported

- name: Import InfluxData public key for verification
  become: yes
  command: gpg --import /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg
  when: influxdata_key_imported.changed and influx_installed.stat.exists == true


    # - name: Verify signature
    #   command: gpg --verify influxdb-1.8.10_linux_amd64.tar.gz.asc influxdb-1.8.10_linux_amd64.tar.gz
    #   register: signature_verification_result
    #   failed_when: signature_verification_result.rc != 0
    #   changed_when: false
    #   ignore_errors: yes

    # - name: Prompt installation success
    #   debug:
    #     msg: "InfluxDB installation, user setup, and verification successful."
    #   when: '"gpg: Good signature from \\"InfluxDB Packaging Service <support@influxdb.com>\\" [unknown]" in signature_verification_result.stdout'

- name: Check if signature verification is already done
  stat:
    path: /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz.asc
  register: signature_verified

- name: Verify signature
  command: gpg --verify /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz.asc /home/vagrant/influxdb-1.8.10_linux_amd64.tar.gz
  register: signature_verification_result
  failed_when: signature_verification_result.rc != 0
  changed_when: false
  ignore_errors: yes
  when: not signature_verified.stat.exists

- name: Prompt installation success
  debug:
    msg: "InfluxDB installation, user setup, and verification successful."
  when: '"gpg: Good signature from \"InfluxDB Packaging Service <support@influxdb.com>\" [unknown]" in signature_verification_result.stdout' and signature_verification_result.changed

- name: Check if initial user is already created
  shell: influx user list -t "{{ auth_token.stdout }}" --hide-headers | grep influx_admin
  register: initial_user_created
  changed_when: false
  ignore_errors: true

- name: Create initial user
  shell: influx -execute "CREATE USER influx_admin WITH PASSWORD 'password' WITH ALL PRIVILEGES"
  changed_when: false
  when: signature_verification_result.rc == 0 and not initial_user_created.stdout

- name: Get authentication token
  shell: influx auth create -n influx_admin -p 'password' --org pms18@HUA --hide-headers | awk '{print $3}'
  register: auth_token
  when: signature_verification_result.rc == 0 and not initial_user_created.stdout

- name: Check if authentication token file already exists
  stat:
    path: /home/vagrant/.ssh/infdb-token
  register: token_file_exists

- name: Store authentication token to file
  become: yes
  copy:
    content: "{{ auth_token.stdout }}"
    dest: /home/vagrant/.ssh/infdb-token
    owner: vagrant
    group: vagrant
    mode: "0644"
  when: auth_token.changed and not token_file_exists.stat.exists


  # handlers:
  #   - name: Start InfluxDB service
  #     systemd:
  #         name: influxdb
  #         state: started