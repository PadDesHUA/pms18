- name: Dynamic Host Selection from Vagrant Status
  hosts: localhost
  gather_facts: no
  # vars:
  #   vagrant_folder: "./Vagrant"
  #   vagrant_status_command: "cd {{ vagrant_folder }} && vagrant status | awk '{print $1}' | awk 'NR>2' | head -n -3"
  tasks:
    - name: Get Vagrant VMs
      shell: |
        cd /home/itp22109/pms18/Vagrant/
        vagrant status | awk '{print $1}' | awk 'NR>2' | head -n -3
      register: vagrant_output

    - name: Extract VM names
      set_fact:
        vm_names: "{{ vagrant_output.stdout_lines + ['all'] }}"

    - name: Display VM choices
      debug:
        msg: "Select a VM: {{ vm_names }}"

    - name: User Input for VM choice
      pause:
        prompt: "Choose a VM from the list above"
      register: user_vm_choice

    - name: Execute vagrant up for selected VM
      shell: |
       cd /home/itp22109/pms18/Vagrant/
       vagrant up {{ user_vm_choice.user_input }}
      when: user_vm_choice.user_input != 'all'

    - name: User Input for Playbook choice
      pause:
        prompt: "Do you want to run the Ansible playbook on the selected VM? (yes/no)"
      register: user_playbook_choice

    - name: Execute Ansible playbook based on user choice
      include_tasks: "{{ user_vm_choice.user_input }}.yaml"
      when: user_vm_choice.user_input != 'all' and user_playbook_choice.user_input == 'yes'
      # delegate_to: oc-srv-01
      vars: 
        ansible_connection: ssh
        ansible_user: vagrant
        ansible_host: "{{ user_vm_choice.user_input }}"


- name: Read local /etc/hosts file
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Read /etc/hosts file
      shell: cat /etc/hosts | grep 192.168.56. > ~/pms18/Vagrant/pms18_hosts


- name: Append local /etc/hosts entries to remote hosts
  hosts: all
  become: yes
  tasks:
    - name: Append /etc/hosts entries
      shell: cat /vagrant/pms18_hosts >> /etc/hosts


- name: Run Docker Compose
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Run Vagrant up for control VM
      command: vagrant up control
      args:
        chdir: /Vagrant
      when: deployment_choice.user_input == 'docker'